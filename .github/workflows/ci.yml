name: CI

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
    paths-ignore:
      - 'README.md'
      - 'CLAUDE.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'CLAUDE.md'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Check out code
      uses: actions/checkout@v4

    - name: Install dependencies
      run: go mod download

    - name: Install MongoDB tools
      run: |
        wget -qO - https://www.mongodb.org/static/pgp/server-7.0.asc | sudo apt-key add -
        echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
        sudo apt-get update
        sudo apt-get install -y mongodb-database-tools

    - name: Run tests
      run: go test -v ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: "!startsWith(github.ref, 'refs/tags/')"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build with GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: build --snapshot --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    if: startsWith(github.ref, 'refs/tags/')
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
